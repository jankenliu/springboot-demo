<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

    <!-- 配置文件 -->
    <properties resource="profiles/dev.properties" />

    <context id="MysqlContext" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 由于beginningDelimiter和endingDelimiter的默认值为双引号(")，在Mysql中不能这么写，所以还要将这两个默认值改为`  -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- 自定义实体lombok的插件 -->
        <plugin type="com.jankin.springboot.demo.plugin.LombokPlugin"/>

        <!--自定义通用mapper插件-->
        <plugin type="com.jankin.springboot.demo.plugin.MapperPlugin">
            <property name="mappers" value="com.jankin.springboot.demo.common.base.BaseMapper"/>
            <property name="caseSensitive" value="true"/>
        </plugin>

        <!-- 生成在XML中的<cache>元素 -->
##        <plugin type="org.mybatis.generator.plugins.CachePlugin">
##            <!-- 使用ehcache -->
##            <property name="cache_type" value="org.mybatis.caches.ehcache.LoggingEhcache" />
##            <!-- 内置cache配置 -->
##            <!--
##            <property name="cache_eviction" value="LRU" />
##            <property name="cache_flushInterval" value="60000" />
##            <property name="cache_readOnly" value="true" />
##            <property name="cache_size" value="1024" />
##            -->
##        </plugin>

        <!-- 数据库连接 -->
        <jdbcConnection driverClass="${generator.jdbc.driver}"
                        connectionURL="${generator.jdbc.url}"
                        userId="${generator.jdbc.username}"
                        password="${generator.jdbc.password}" />

        <!-- model生成 -->
        <javaModelGenerator targetPackage="${generator_javaModelGenerator_targetPackage}" targetProject="src/main/java" />

        <!-- MapperXML生成 -->
        <sqlMapGenerator targetPackage="${generator_sqlMapGenerator_targetPackage}" targetProject="src/main/java" />

        <!-- Mapper接口生成 -->
        <javaClientGenerator targetPackage="${generator_javaClientGenerator_targetPackage}" targetProject="src/main/java" type="XMLMAPPER" />

        <!-- 需要映射的表 -->
#foreach($table in $tables)
    #if($last_insert_id_tables.containsKey($!table.table_name) == true)
    <table tableName="$!table.table_name" domainObjectName="$!table.model_name">
        <generatedKey column="$!last_insert_id_tables.get($!table.table_name)" sqlStatement="MySql" identity="true"/>
    </table>
    #else
     <table tableName="$!table.table_name" domainObjectName="$!table.model_name" />
    #end
#end
</context>
</generatorConfiguration>
